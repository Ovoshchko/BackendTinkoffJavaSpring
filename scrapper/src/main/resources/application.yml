app:
  scheduler:
    enable: true
    interval: 25s
    force-check-delay: 5s
  database-access-type: jpa

api:
  bot:
    baseUrl: http://localhost:8090/
  github:
    baseUrl: https://api.github.com/
  stackoverflow:
    base-url: https://api.stackexchange.com/2.3/

client:
  retry:
    initial-interval: 1s
    max-attempts: 5
    max-interval: 2s
    multiplier: 2
    codes: 500, 501, 502, 503 ,504
  backoff: linear

springdoc:
  default-produces-media-type: application/json
  swagger-ui:
    enabled: true
    path: /swagger-ui.html


spring:
  liquibase:
    enabled: false
  application:
    name: scrapper
  datasource:
    driver: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/scrapper
    schema: linkviewer
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  cache:
    cache-names:
      - rate-limit-buckets
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider

server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets
      url:
        - /links.*
        - /tg-chat.*
      strategy: first
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"Доступ к ресурсу временно ограничен в связи с большим количеством запросов.\" }"
      rate-limits:
        - cache-key: getRemoteAddr()
          bandwidths:
            - capacity: 5
              time: 100
              unit: seconds
              refill-speed: interval
