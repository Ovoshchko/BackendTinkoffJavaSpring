/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq.linkviewer.tables.pojos;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Gitcommits implements Serializable {

    private static final long serialVersionUID = 1L;

    private String name;
    private LocalDateTime madeDate;
    private String url;
    private Long commentNumber;

    public Gitcommits() {}

    public Gitcommits(Gitcommits value) {
        this.name = value.name;
        this.madeDate = value.madeDate;
        this.url = value.url;
        this.commentNumber = value.commentNumber;
    }

    @ConstructorProperties({ "name", "madeDate", "url", "commentNumber" })
    public Gitcommits(
        @Nullable String name,
        @Nullable LocalDateTime madeDate,
        @Nullable String url,
        @Nullable Long commentNumber
    ) {
        this.name = name;
        this.madeDate = madeDate;
        this.url = url;
        this.commentNumber = commentNumber;
    }

    /**
     * Getter for <code>LINKVIEWER.GITCOMMITS.NAME</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>LINKVIEWER.GITCOMMITS.NAME</code>.
     */
    public void setName(@Nullable String name) {
        this.name = name;
    }

    /**
     * Getter for <code>LINKVIEWER.GITCOMMITS.MADE_DATE</code>.
     */
    @Nullable
    public LocalDateTime getMadeDate() {
        return this.madeDate;
    }

    /**
     * Setter for <code>LINKVIEWER.GITCOMMITS.MADE_DATE</code>.
     */
    public void setMadeDate(@Nullable LocalDateTime madeDate) {
        this.madeDate = madeDate;
    }

    /**
     * Getter for <code>LINKVIEWER.GITCOMMITS.URL</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINKVIEWER.GITCOMMITS.URL</code>.
     */
    public void setUrl(@Nullable String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINKVIEWER.GITCOMMITS.COMMENT_NUMBER</code>.
     */
    @Nullable
    public Long getCommentNumber() {
        return this.commentNumber;
    }

    /**
     * Setter for <code>LINKVIEWER.GITCOMMITS.COMMENT_NUMBER</code>.
     */
    public void setCommentNumber(@Nullable Long commentNumber) {
        this.commentNumber = commentNumber;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Gitcommits other = (Gitcommits) obj;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.madeDate == null) {
            if (other.madeDate != null)
                return false;
        }
        else if (!this.madeDate.equals(other.madeDate))
            return false;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        if (this.commentNumber == null) {
            if (other.commentNumber != null)
                return false;
        }
        else if (!this.commentNumber.equals(other.commentNumber))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.madeDate == null) ? 0 : this.madeDate.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.commentNumber == null) ? 0 : this.commentNumber.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Gitcommits (");

        sb.append(name);
        sb.append(", ").append(madeDate);
        sb.append(", ").append(url);
        sb.append(", ").append(commentNumber);

        sb.append(")");
        return sb.toString();
    }
}
